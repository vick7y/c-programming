Grading at Tue May  4 20:22:39 UTC 2021
Compiling your code
rm -f test poker cards.o my-test-main.o *~
cc -ggdb3 -Wall -Werror -pedantic -std=gnu99   -c -o deck.o deck.c
cc -ggdb3 -Wall -Werror -pedantic -std=gnu99   -c -o eval.o eval.c
cc -ggdb3 -Wall -Werror -pedantic -std=gnu99   -c -o cards.o cards.c
gcc -o test-eval -ggdb3 deck.o deck-c4.o eval-c4.o eval.o test-eval.o cards.o input.o future.o
Testcase 1: Trying hands with nothing
Valgrind returned an error status
==741== Memcheck, a memory error detector
==741== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==741== Using Valgrind-3.11.0 and LibVEX; rerun with -h for copyright info
==741== Command: ./test-eval inp.1.txt
==741== Parent PID: 740
==741== 
==741== Invalid read of size 8
==741==    at 0x401A0F: build_hand_from_match (eval.c:187)
==741==    by 0x4023F3: evaluate_hand (eval.c:363)
==741==    by 0x4027DB: describe_hand (test-eval.c:68)
==741==    by 0x402A06: main (test-eval.c:116)
==741==  Address 0x520a308 is 0 bytes after a block of size 40 alloc'd
==741==    at 0x4C2FD5F: realloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==741==    by 0x401076: add_card_to (deck-c4.c:29)
==741==    by 0x403139: hand_from_string (input.c:49)
==741==    by 0x40298B: main (test-eval.c:110)
==741== 
==741== Invalid read of size 4
==741==    at 0x401A12: build_hand_from_match (eval.c:187)
==741==    by 0x4023F3: evaluate_hand (eval.c:363)
==741==    by 0x4027DB: describe_hand (test-eval.c:68)
==741==    by 0x402A06: main (test-eval.c:116)
==741==  Address 0x0 is not stack'd, malloc'd or (recently) free'd
==741== 
==741== 
==741== Process terminating with default action of signal 11 (SIGSEGV): dumping core
==741==  Access not within mapped region at address 0x0
==741==    at 0x401A12: build_hand_from_match (eval.c:187)
==741==    by 0x4023F3: evaluate_hand (eval.c:363)
==741==    by 0x4027DB: describe_hand (test-eval.c:68)
==741==    by 0x402A06: main (test-eval.c:116)
==741==  If you believe this happened as a result of a stack
==741==  overflow in your program's main thread (unlikely but
==741==  possible), you can try to increase the size of the
==741==  main thread stack using the --main-stacksize= flag.
==741==  The main thread stack size used in this run was 8388608.
==741== 
==741== HEAP SUMMARY:
==741==     in use at exit: 864 bytes in 16 blocks
==741==   total heap usage: 202 allocs, 186 frees, 12,472 bytes allocated
==741== 
==741== LEAK SUMMARY:
==741==    definitely lost: 0 bytes in 0 blocks
==741==    indirectly lost: 0 bytes in 0 blocks
==741==      possibly lost: 0 bytes in 0 blocks
==741==    still reachable: 864 bytes in 16 blocks
==741==         suppressed: 0 bytes in 0 blocks
==741== Rerun with --leak-check=full to see details of leaked memory
==741== 
==741== For counts of detected and suppressed errors, rerun with: -v
==741== ERROR SUMMARY: 2 errors from 2 contexts (suppressed: 0 from 0)
Testcase 2: Trying hands with pairs
 Checking the output 
Your file matched the expected output
 - Testcase passed
Testcase 3: Trying hands with 2 pairs
Valgrind returned an error status
==758== Memcheck, a memory error detector
==758== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==758== Using Valgrind-3.11.0 and LibVEX; rerun with -h for copyright info
==758== Command: ./test-eval inp.3.txt
==758== Parent PID: 757
==758== 
==758== Invalid read of size 8
==758==    at 0x4018AC: is_ace_low_straight_at (eval.c:149)
==758==    by 0x401954: is_straight_at (eval.c:168)
==758==    by 0x402660: describe_hand (test-eval.c:49)
==758==    by 0x402A06: main (test-eval.c:116)
==758==  Address 0x52056c8 is 0 bytes after a block of size 40 alloc'd
==758==    at 0x4C2FD5F: realloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==758==    by 0x401076: add_card_to (deck-c4.c:29)
==758==    by 0x403139: hand_from_string (input.c:49)
==758==    by 0x40298B: main (test-eval.c:110)
==758== 
==758== Invalid read of size 4
==758==    at 0x4018AF: is_ace_low_straight_at (eval.c:149)
==758==    by 0x401954: is_straight_at (eval.c:168)
==758==    by 0x402660: describe_hand (test-eval.c:49)
==758==    by 0x402A06: main (test-eval.c:116)
==758==  Address 0x0 is not stack'd, malloc'd or (recently) free'd
==758== 
==758== 
==758== Process terminating with default action of signal 11 (SIGSEGV): dumping core
==758==  Access not within mapped region at address 0x0
==758==    at 0x4018AF: is_ace_low_straight_at (eval.c:149)
==758==    by 0x401954: is_straight_at (eval.c:168)
==758==    by 0x402660: describe_hand (test-eval.c:49)
==758==    by 0x402A06: main (test-eval.c:116)
==758==  If you believe this happened as a result of a stack
==758==  overflow in your program's main thread (unlikely but
==758==  possible), you can try to increase the size of the
==758==  main thread stack using the --main-stacksize= flag.
==758==  The main thread stack size used in this run was 8388608.
==758== 
==758== HEAP SUMMARY:
==758==     in use at exit: 864 bytes in 16 blocks
==758==   total heap usage: 26 allocs, 10 frees, 9,216 bytes allocated
==758== 
==758== LEAK SUMMARY:
==758==    definitely lost: 0 bytes in 0 blocks
==758==    indirectly lost: 0 bytes in 0 blocks
==758==      possibly lost: 0 bytes in 0 blocks
==758==    still reachable: 864 bytes in 16 blocks
==758==         suppressed: 0 bytes in 0 blocks
==758== Rerun with --leak-check=full to see details of leaked memory
==758== 
==758== For counts of detected and suppressed errors, rerun with: -v
==758== ERROR SUMMARY: 2 errors from 2 contexts (suppressed: 0 from 0)
Testcase 4: Trying hands with 3 of a kind
 Checking the output 
Your file matched the expected output
 - Testcase passed
Testcase 5: Trying hands with straights
Valgrind returned an error status
==775== Memcheck, a memory error detector
==775== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==775== Using Valgrind-3.11.0 and LibVEX; rerun with -h for copyright info
==775== Command: ./test-eval inp.5.txt
==775== Parent PID: 774
==775== 
==775== Invalid read of size 8
==775==    at 0x4018AC: is_ace_low_straight_at (eval.c:149)
==775==    by 0x401954: is_straight_at (eval.c:168)
==775==    by 0x402660: describe_hand (test-eval.c:49)
==775==    by 0x402A06: main (test-eval.c:116)
==775==  Address 0x520bac8 is 0 bytes after a block of size 40 alloc'd
==775==    at 0x4C2FD5F: realloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==775==    by 0x401076: add_card_to (deck-c4.c:29)
==775==    by 0x403139: hand_from_string (input.c:49)
==775==    by 0x40298B: main (test-eval.c:110)
==775== 
==775== Invalid read of size 4
==775==    at 0x4018AF: is_ace_low_straight_at (eval.c:149)
==775==    by 0x401954: is_straight_at (eval.c:168)
==775==    by 0x402660: describe_hand (test-eval.c:49)
==775==    by 0x402A06: main (test-eval.c:116)
==775==  Address 0x0 is not stack'd, malloc'd or (recently) free'd
==775== 
==775== 
==775== Process terminating with default action of signal 11 (SIGSEGV): dumping core
==775==  Access not within mapped region at address 0x0
==775==    at 0x4018AF: is_ace_low_straight_at (eval.c:149)
==775==    by 0x401954: is_straight_at (eval.c:168)
==775==    by 0x402660: describe_hand (test-eval.c:49)
==775==    by 0x402A06: main (test-eval.c:116)
==775==  If you believe this happened as a result of a stack
==775==  overflow in your program's main thread (unlikely but
==775==  possible), you can try to increase the size of the
==775==  main thread stack using the --main-stacksize= flag.
==775==  The main thread stack size used in this run was 8388608.
==775== 
==775== HEAP SUMMARY:
==775==     in use at exit: 864 bytes in 16 blocks
==775==   total heap usage: 266 allocs, 250 frees, 13,880 bytes allocated
==775== 
==775== LEAK SUMMARY:
==775==    definitely lost: 0 bytes in 0 blocks
==775==    indirectly lost: 0 bytes in 0 blocks
==775==      possibly lost: 0 bytes in 0 blocks
==775==    still reachable: 864 bytes in 16 blocks
==775==         suppressed: 0 bytes in 0 blocks
==775== Rerun with --leak-check=full to see details of leaked memory
==775== 
==775== For counts of detected and suppressed errors, rerun with: -v
==775== ERROR SUMMARY: 2 errors from 2 contexts (suppressed: 0 from 0)
Testcase 6: Trying hands with flushes
 Checking the output 
Line_68_did_not_match
Your file did not match the expected ouput
 - Output did not match, testcase failed
Hand 1:								Hand 1:
--------							--------
As Kc Qs Js 0s 2s 						As Kc Qs Js 0s 2s 
 - Flush in suit s						 - Flush in suit s
 - Straight at index 0						 - Straight at index 0
 - The most of a kind is 1 of a kind (at index 0 / value A)	 - The most of a kind is 1 of a kind (at index 0 / value A)
 - No secondary pair						 - No secondary pair
 - evaluate_hand's ranking: FLUSH				 - evaluate_hand's ranking: FLUSH
 - 5 cards used for hand: As Qs Js 0s 2s 			 - 5 cards used for hand: As Qs Js 0s 2s 
Hand 2:								Hand 2:
--------							--------
As Ks Qc Js 0s 3s 						As Ks Qc Js 0s 3s 
 - Flush in suit s						 - Flush in suit s
 - Straight at index 0						 - Straight at index 0
 - The most of a kind is 1 of a kind (at index 0 / value A)	 - The most of a kind is 1 of a kind (at index 0 / value A)
 - No secondary pair						 - No secondary pair
 - evaluate_hand's ranking: FLUSH				 - evaluate_hand's ranking: FLUSH
 - 5 cards used for hand: As Ks Js 0s 3s 			 - 5 cards used for hand: As Ks Js 0s 3s 
Comparison : 							Comparison : 
--------------							--------------
Hand 2 wins!							Hand 2 wins!
============================					============================
Hand 1:								Hand 1:
--------							--------
Kh Jh 9h 8s 4h 2h 						Kh Jh 9h 8s 4h 2h 
 - Flush in suit h						 - Flush in suit h
 - The most of a kind is 1 of a kind (at index 0 / value K)	 - The most of a kind is 1 of a kind (at index 0 / value K)
 - No secondary pair						 - No secondary pair
 - evaluate_hand's ranking: FLUSH				 - evaluate_hand's ranking: FLUSH
 - 5 cards used for hand: Kh Jh 9h 4h 2h 			 - 5 cards used for hand: Kh Jh 9h 4h 2h 
Hand 2:								Hand 2:
--------							--------
Qd 9d 7d 6c 5d 2d 						Qd 9d 7d 6c 5d 2d 
 - Flush in suit d						 - Flush in suit d
 - The most of a kind is 1 of a kind (at index 0 / value Q)	 - The most of a kind is 1 of a kind (at index 0 / value Q)
 - No secondary pair						 - No secondary pair
 - evaluate_hand's ranking: FLUSH				 - evaluate_hand's ranking: FLUSH
 - 5 cards used for hand: Qd 9d 7d 5d 2d 			 - 5 cards used for hand: Qd 9d 7d 5d 2d 
Comparison : 							Comparison : 
--------------							--------------
Hand 1 wins!							Hand 1 wins!
============================					============================
Hand 1:								Hand 1:
--------							--------
Kc Jc 9c 7h 4c 3c 2h 						Kc Jc 9c 7h 4c 3c 2h 
 - Flush in suit c						 - Flush in suit c
 - The most of a kind is 1 of a kind (at index 0 / value K)	 - The most of a kind is 1 of a kind (at index 0 / value K)
 - No secondary pair						 - No secondary pair
 - evaluate_hand's ranking: FLUSH				 - evaluate_hand's ranking: FLUSH
 - 5 cards used for hand: Kc Jc 9c 4c 3c 			 - 5 cards used for hand: Kc Jc 9c 4c 3c 
Hand 2:								Hand 2:
--------							--------
Kc Jc 9c 7h 4c 3h 2c 						Kc Jc 9c 7h 4c 3h 2c 
 - Flush in suit c						 - Flush in suit c
 - The most of a kind is 1 of a kind (at index 0 / value K)	 - The most of a kind is 1 of a kind (at index 0 / value K)
 - No secondary pair						 - No secondary pair
 - evaluate_hand's ranking: FLUSH				 - evaluate_hand's ranking: FLUSH
 - 5 cards used for hand: Kc Jc 9c 4c 2c 			 - 5 cards used for hand: Kc Jc 9c 4c 2c 
Comparison : 							Comparison : 
--------------							--------------
Hand 1 wins!							Hand 1 wins!
============================					============================
Hand 1:								Hand 1:
--------							--------
Ac As Qc Qs 7s 6s 3s 						Ac As Qc Qs 7s 6s 3s 
 - Flush in suit s						 - Flush in suit s
 - The most of a kind is 2 of a kind (at index 0 / value A)	 - The most of a kind is 2 of a kind (at index 0 / value A)
 - Secondary pair at index 2 (value Q)			      |	 - No secondary pair
 - evaluate_hand's ranking: FLUSH				 - evaluate_hand's ranking: FLUSH
 - 5 cards used for hand: As Qs 7s 6s 3s 			 - 5 cards used for hand: As Qs 7s 6s 3s 
Hand 2:								Hand 2:
--------							--------
Kc Kh Ks 9h 7h 3h 2h 						Kc Kh Ks 9h 7h 3h 2h 
 - Flush in suit h						 - Flush in suit h
 - The most of a kind is 3 of a kind (at index 0 / value K)	 - The most of a kind is 3 of a kind (at index 0 / value K)
 - No secondary pair						 - No secondary pair
 - evaluate_hand's ranking: FLUSH				 - evaluate_hand's ranking: FLUSH
 - 5 cards used for hand: Kh 9h 7h 3h 2h 			 - 5 cards used for hand: Kh 9h 7h 3h 2h 
Comparison : 							Comparison : 
--------------							--------------
Hand 1 wins!							Hand 1 wins!
============================					============================
Hand 1:								Hand 1:
--------							--------
Ah Qh 0h 8h 6h 4h 2h 						Ah Qh 0h 8h 6h 4h 2h 
 - Flush in suit h						 - Flush in suit h
 - The most of a kind is 1 of a kind (at index 0 / value A)	 - The most of a kind is 1 of a kind (at index 0 / value A)
 - No secondary pair						 - No secondary pair
 - evaluate_hand's ranking: FLUSH				 - evaluate_hand's ranking: FLUSH
 - 5 cards used for hand: Ah Qh 0h 8h 6h 			 - 5 cards used for hand: Ah Qh 0h 8h 6h 
Hand 2:								Hand 2:
--------							--------
Kh Qh 0h 8h 6h 4h 2h 						Kh Qh 0h 8h 6h 4h 2h 
 - Flush in suit h						 - Flush in suit h
 - The most of a kind is 1 of a kind (at index 0 / value K)	 - The most of a kind is 1 of a kind (at index 0 / value K)
 - No secondary pair						 - No secondary pair
 - evaluate_hand's ranking: FLUSH				 - evaluate_hand's ranking: FLUSH
 - 5 cards used for hand: Kh Qh 0h 8h 6h 			 - 5 cards used for hand: Kh Qh 0h 8h 6h 
Comparison : 							Comparison : 
--------------							--------------
Hand 1 wins!							Hand 1 wins!
============================					============================
Hand 1:								Hand 1:
--------							--------
Ad Qd 0d 8d 6d 4d 						Ad Qd 0d 8d 6d 4d 
 - Flush in suit d						 - Flush in suit d
 - The most of a kind is 1 of a kind (at index 0 / value A)	 - The most of a kind is 1 of a kind (at index 0 / value A)
 - No secondary pair						 - No secondary pair
 - evaluate_hand's ranking: FLUSH				 - evaluate_hand's ranking: FLUSH
 - 5 cards used for hand: Ad Qd 0d 8d 6d 			 - 5 cards used for hand: Ad Qd 0d 8d 6d 
Hand 2:								Hand 2:
--------							--------
Ad Kd 0d 8d 6d 4d 						Ad Kd 0d 8d 6d 4d 
 - Flush in suit d						 - Flush in suit d
 - The most of a kind is 1 of a kind (at index 0 / value A)	 - The most of a kind is 1 of a kind (at index 0 / value A)
 - No secondary pair						 - No secondary pair
 - evaluate_hand's ranking: FLUSH				 - evaluate_hand's ranking: FLUSH
 - 5 cards used for hand: Ad Kd 0d 8d 6d 			 - 5 cards used for hand: Ad Kd 0d 8d 6d 
Comparison : 							Comparison : 
--------------							--------------
Hand 2 wins!							Hand 2 wins!
============================					============================
Hand 1:								Hand 1:
--------							--------
Ad Qd 0d 8d 6d 4d 						Ad Qd 0d 8d 6d 4d 
 - Flush in suit d						 - Flush in suit d
 - The most of a kind is 1 of a kind (at index 0 / value A)	 - The most of a kind is 1 of a kind (at index 0 / value A)
 - No secondary pair						 - No secondary pair
 - evaluate_hand's ranking: FLUSH				 - evaluate_hand's ranking: FLUSH
 - 5 cards used for hand: Ad Qd 0d 8d 6d 			 - 5 cards used for hand: Ad Qd 0d 8d 6d 
Hand 2:								Hand 2:
--------							--------
Ad Jd 0d 8d 6d 4d 						Ad Jd 0d 8d 6d 4d 
 - Flush in suit d						 - Flush in suit d
 - The most of a kind is 1 of a kind (at index 0 / value A)	 - The most of a kind is 1 of a kind (at index 0 / value A)
 - No secondary pair						 - No secondary pair
 - evaluate_hand's ranking: FLUSH				 - evaluate_hand's ranking: FLUSH
 - 5 cards used for hand: Ad Jd 0d 8d 6d 			 - 5 cards used for hand: Ad Jd 0d 8d 6d 
Comparison : 							Comparison : 
--------------							--------------
Hand 1 wins!							Hand 1 wins!
============================					============================
Hand 1:								Hand 1:
--------							--------
As Qs 0s 8s 6s 4s 						As Qs 0s 8s 6s 4s 
 - Flush in suit s						 - Flush in suit s
 - The most of a kind is 1 of a kind (at index 0 / value A)	 - The most of a kind is 1 of a kind (at index 0 / value A)
 - No secondary pair						 - No secondary pair
 - evaluate_hand's ranking: FLUSH				 - evaluate_hand's ranking: FLUSH
 - 5 cards used for hand: As Qs 0s 8s 6s 			 - 5 cards used for hand: As Qs 0s 8s 6s 
Hand 2:								Hand 2:
--------							--------
As Qs Js 8s 6s 4s 						As Qs Js 8s 6s 4s 
 - Flush in suit s						 - Flush in suit s
 - The most of a kind is 1 of a kind (at index 0 / value A)	 - The most of a kind is 1 of a kind (at index 0 / value A)
 - No secondary pair						 - No secondary pair
 - evaluate_hand's ranking: FLUSH				 - evaluate_hand's ranking: FLUSH
 - 5 cards used for hand: As Qs Js 8s 6s 			 - 5 cards used for hand: As Qs Js 8s 6s 
Comparison : 							Comparison : 
--------------							--------------
Hand 2 wins!							Hand 2 wins!
============================					============================
Hand 1:								Hand 1:
--------							--------
As Qs 0s 8s 6s 4s 						As Qs 0s 8s 6s 4s 
 - Flush in suit s						 - Flush in suit s
 - The most of a kind is 1 of a kind (at index 0 / value A)	 - The most of a kind is 1 of a kind (at index 0 / value A)
 - No secondary pair						 - No secondary pair
 - evaluate_hand's ranking: FLUSH				 - evaluate_hand's ranking: FLUSH
 - 5 cards used for hand: As Qs 0s 8s 6s 			 - 5 cards used for hand: As Qs 0s 8s 6s 
Hand 2:								Hand 2:
--------							--------
As Qs 9s 8s 6s 4s 						As Qs 9s 8s 6s 4s 
 - Flush in suit s						 - Flush in suit s
 - The most of a kind is 1 of a kind (at index 0 / value A)	 - The most of a kind is 1 of a kind (at index 0 / value A)
 - No secondary pair						 - No secondary pair
 - evaluate_hand's ranking: FLUSH				 - evaluate_hand's ranking: FLUSH
 - 5 cards used for hand: As Qs 9s 8s 6s 			 - 5 cards used for hand: As Qs 9s 8s 6s 
Comparison : 							Comparison : 
--------------							--------------
Hand 1 wins!							Hand 1 wins!
============================					============================
Hand 1:								Hand 1:
--------							--------
Ac Qc 0c 8c 6c 4c 						Ac Qc 0c 8c 6c 4c 
 - Flush in suit c						 - Flush in suit c
 - The most of a kind is 1 of a kind (at index 0 / value A)	 - The most of a kind is 1 of a kind (at index 0 / value A)
 - No secondary pair						 - No secondary pair
 - evaluate_hand's ranking: FLUSH				 - evaluate_hand's ranking: FLUSH
 - 5 cards used for hand: Ac Qc 0c 8c 6c 			 - 5 cards used for hand: Ac Qc 0c 8c 6c 
Hand 2:								Hand 2:
--------							--------
Ac Qc 0c 9c 6c 4c 						Ac Qc 0c 9c 6c 4c 
 - Flush in suit c						 - Flush in suit c
 - The most of a kind is 1 of a kind (at index 0 / value A)	 - The most of a kind is 1 of a kind (at index 0 / value A)
 - No secondary pair						 - No secondary pair
 - evaluate_hand's ranking: FLUSH				 - evaluate_hand's ranking: FLUSH
 - 5 cards used for hand: Ac Qc 0c 9c 6c 			 - 5 cards used for hand: Ac Qc 0c 9c 6c 
Comparison : 							Comparison : 
--------------							--------------
Hand 2 wins!							Hand 2 wins!
============================					============================
Hand 1:								Hand 1:
--------							--------
Ac Qc 0c 8c 6c 4c 						Ac Qc 0c 8c 6c 4c 
 - Flush in suit c						 - Flush in suit c
 - The most of a kind is 1 of a kind (at index 0 / value A)	 - The most of a kind is 1 of a kind (at index 0 / value A)
 - No secondary pair						 - No secondary pair
 - evaluate_hand's ranking: FLUSH				 - evaluate_hand's ranking: FLUSH
 - 5 cards used for hand: Ac Qc 0c 8c 6c 			 - 5 cards used for hand: Ac Qc 0c 8c 6c 
Hand 2:								Hand 2:
--------							--------
Ac Qc 0c 7c 6c 4c 						Ac Qc 0c 7c 6c 4c 
 - Flush in suit c						 - Flush in suit c
 - The most of a kind is 1 of a kind (at index 0 / value A)	 - The most of a kind is 1 of a kind (at index 0 / value A)
 - No secondary pair						 - No secondary pair
 - evaluate_hand's ranking: FLUSH				 - evaluate_hand's ranking: FLUSH
 - 5 cards used for hand: Ac Qc 0c 7c 6c 			 - 5 cards used for hand: Ac Qc 0c 7c 6c 
Comparison : 							Comparison : 
--------------							--------------
Hand 1 wins!							Hand 1 wins!
============================					============================
Hand 1:								Hand 1:
--------							--------
Ah Qh 0h 8h 6h 4h 						Ah Qh 0h 8h 6h 4h 
 - Flush in suit h						 - Flush in suit h
 - The most of a kind is 1 of a kind (at index 0 / value A)	 - The most of a kind is 1 of a kind (at index 0 / value A)
 - No secondary pair						 - No secondary pair
 - evaluate_hand's ranking: FLUSH				 - evaluate_hand's ranking: FLUSH
 - 5 cards used for hand: Ah Qh 0h 8h 6h 			 - 5 cards used for hand: Ah Qh 0h 8h 6h 
Hand 2:								Hand 2:
--------							--------
Ah Qh 0h 8h 7h 4h 						Ah Qh 0h 8h 7h 4h 
 - Flush in suit h						 - Flush in suit h
 - The most of a kind is 1 of a kind (at index 0 / value A)	 - The most of a kind is 1 of a kind (at index 0 / value A)
 - No secondary pair						 - No secondary pair
 - evaluate_hand's ranking: FLUSH				 - evaluate_hand's ranking: FLUSH
 - 5 cards used for hand: Ah Qh 0h 8h 7h 			 - 5 cards used for hand: Ah Qh 0h 8h 7h 
Comparison : 							Comparison : 
--------------							--------------
Hand 2 wins!							Hand 2 wins!
============================					============================
Hand 1:								Hand 1:
--------							--------
Ah Qh 0h 8h 6h 4h 						Ah Qh 0h 8h 6h 4h 
 - Flush in suit h						 - Flush in suit h
 - The most of a kind is 1 of a kind (at index 0 / value A)	 - The most of a kind is 1 of a kind (at index 0 / value A)
 - No secondary pair						 - No secondary pair
 - evaluate_hand's ranking: FLUSH				 - evaluate_hand's ranking: FLUSH
 - 5 cards used for hand: Ah Qh 0h 8h 6h 			 - 5 cards used for hand: Ah Qh 0h 8h 6h 
Hand 2:								Hand 2:
--------							--------
Ah Qh 0h 8h 5h 4h 						Ah Qh 0h 8h 5h 4h 
 - Flush in suit h						 - Flush in suit h
 - The most of a kind is 1 of a kind (at index 0 / value A)	 - The most of a kind is 1 of a kind (at index 0 / value A)
 - No secondary pair						 - No secondary pair
 - evaluate_hand's ranking: FLUSH				 - evaluate_hand's ranking: FLUSH
 - 5 cards used for hand: Ah Qh 0h 8h 5h 			 - 5 cards used for hand: Ah Qh 0h 8h 5h 
Comparison : 							Comparison : 
--------------							--------------
Hand 1 wins!							Hand 1 wins!
============================					============================
Hand 1:								Hand 1:
--------							--------
Ah Qh 0h 8h 6h 4h 						Ah Qh 0h 8h 6h 4h 
 - Flush in suit h						 - Flush in suit h
 - The most of a kind is 1 of a kind (at index 0 / value A)	 - The most of a kind is 1 of a kind (at index 0 / value A)
 - No secondary pair						 - No secondary pair
 - evaluate_hand's ranking: FLUSH				 - evaluate_hand's ranking: FLUSH
 - 5 cards used for hand: Ah Qh 0h 8h 6h 			 - 5 cards used for hand: Ah Qh 0h 8h 6h 
Hand 2:								Hand 2:
--------							--------
Ah Qh 0h 8h 6h 5h 						Ah Qh 0h 8h 6h 5h 
 - Flush in suit h						 - Flush in suit h
 - The most of a kind is 1 of a kind (at index 0 / value A)	 - The most of a kind is 1 of a kind (at index 0 / value A)
 - No secondary pair						 - No secondary pair
 - evaluate_hand's ranking: FLUSH				 - evaluate_hand's ranking: FLUSH
 - 5 cards used for hand: Ah Qh 0h 8h 6h 			 - 5 cards used for hand: Ah Qh 0h 8h 6h 
Comparison : 							Comparison : 
--------------							--------------
Tie								Tie
============================					============================
Hand 1:								Hand 1:
--------							--------
Ah Qh 0h 8h 6h 4h 						Ah Qh 0h 8h 6h 4h 
 - Flush in suit h						 - Flush in suit h
 - The most of a kind is 1 of a kind (at index 0 / value A)	 - The most of a kind is 1 of a kind (at index 0 / value A)
 - No secondary pair						 - No secondary pair
 - evaluate_hand's ranking: FLUSH				 - evaluate_hand's ranking: FLUSH
 - 5 cards used for hand: Ah Qh 0h 8h 6h 			 - 5 cards used for hand: Ah Qh 0h 8h 6h 
Hand 2:								Hand 2:
--------							--------
Ah Qh 0h 8h 6h 3h 						Ah Qh 0h 8h 6h 3h 
 - Flush in suit h						 - Flush in suit h
 - The most of a kind is 1 of a kind (at index 0 / value A)	 - The most of a kind is 1 of a kind (at index 0 / value A)
 - No secondary pair						 - No secondary pair
 - evaluate_hand's ranking: FLUSH				 - evaluate_hand's ranking: FLUSH
 - 5 cards used for hand: Ah Qh 0h 8h 6h 			 - 5 cards used for hand: Ah Qh 0h 8h 6h 
Comparison : 							Comparison : 
--------------							--------------
Tie								Tie
============================					============================
Testcase 7: Trying hands with full houses
Valgrind returned an error status
==793== Memcheck, a memory error detector
==793== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==793== Using Valgrind-3.11.0 and LibVEX; rerun with -h for copyright info
==793== Command: ./test-eval inp.7.txt
==793== Parent PID: 792
==793== 
==793== Invalid read of size 8
==793==    at 0x4014C7: card_ptr_comp (eval.c:10)
==793==    by 0x4E73231: msort_with_tmp.part.0 (msort.c:83)
==793==    by 0x4E72EDC: msort_with_tmp (msort.c:45)
==793==    by 0x4E72EDC: msort_with_tmp.part.0 (msort.c:54)
==793==    by 0x4E72EDC: msort_with_tmp (msort.c:45)
==793==    by 0x4E72EDC: msort_with_tmp.part.0 (msort.c:54)
==793==    by 0x4E7369E: msort_with_tmp (msort.c:45)
==793==    by 0x4E7369E: qsort_r (msort.c:297)
==793==    by 0x401B03: compare_hands (eval.c:207)
==793==    by 0x402A7B: main (test-eval.c:124)
==793==  Address 0x5210f40 is 0 bytes after a block of size 48 alloc'd
==793==    at 0x4C2FD5F: realloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==793==    by 0x401076: add_card_to (deck-c4.c:29)
==793==    by 0x403139: hand_from_string (input.c:49)
==793==    by 0x402A4F: main (test-eval.c:122)
==793== 
==793== Invalid read of size 4
==793==    at 0x4014CA: card_ptr_comp (eval.c:10)
==793==    by 0x4E73231: msort_with_tmp.part.0 (msort.c:83)
==793==    by 0x4E72EDC: msort_with_tmp (msort.c:45)
==793==    by 0x4E72EDC: msort_with_tmp.part.0 (msort.c:54)
==793==    by 0x4E72EDC: msort_with_tmp (msort.c:45)
==793==    by 0x4E72EDC: msort_with_tmp.part.0 (msort.c:54)
==793==    by 0x4E7369E: msort_with_tmp (msort.c:45)
==793==    by 0x4E7369E: qsort_r (msort.c:297)
==793==    by 0x401B03: compare_hands (eval.c:207)
==793==    by 0x402A7B: main (test-eval.c:124)
==793==  Address 0x0 is not stack'd, malloc'd or (recently) free'd
==793== 
==793== 
==793== Process terminating with default action of signal 11 (SIGSEGV): dumping core
==793==  Access not within mapped region at address 0x0
==793==    at 0x4014CA: card_ptr_comp (eval.c:10)
==793==    by 0x4E73231: msort_with_tmp.part.0 (msort.c:83)
==793==    by 0x4E72EDC: msort_with_tmp (msort.c:45)
==793==    by 0x4E72EDC: msort_with_tmp.part.0 (msort.c:54)
==793==    by 0x4E72EDC: msort_with_tmp (msort.c:45)
==793==    by 0x4E72EDC: msort_with_tmp.part.0 (msort.c:54)
==793==    by 0x4E7369E: msort_with_tmp (msort.c:45)
==793==    by 0x4E7369E: qsort_r (msort.c:297)
==793==    by 0x401B03: compare_hands (eval.c:207)
==793==    by 0x402A7B: main (test-eval.c:124)
==793==  If you believe this happened as a result of a stack
==793==  overflow in your program's main thread (unlikely but
==793==  possible), you can try to increase the size of the
==793==  main thread stack using the --main-stacksize= flag.
==793==  The main thread stack size used in this run was 8388608.
==793== 
==793== HEAP SUMMARY:
==793==     in use at exit: 912 bytes in 19 blocks
==793==   total heap usage: 510 allocs, 491 frees, 18,928 bytes allocated
==793== 
==793== LEAK SUMMARY:
==793==    definitely lost: 0 bytes in 0 blocks
==793==    indirectly lost: 0 bytes in 0 blocks
==793==      possibly lost: 0 bytes in 0 blocks
==793==    still reachable: 912 bytes in 19 blocks
==793==         suppressed: 0 bytes in 0 blocks
==793== Rerun with --leak-check=full to see details of leaked memory
==793== 
==793== For counts of detected and suppressed errors, rerun with: -v
==793== ERROR SUMMARY: 2 errors from 2 contexts (suppressed: 0 from 0)
Testcase 8: Trying hands with 4 of a kind
 Checking the output 
Line_74_did_not_match
Your file did not match the expected ouput
 - Output did not match, testcase failed
Hand 1:								Hand 1:
--------							--------
Kc Kd Kh Ks 8c 7d 						Kc Kd Kh Ks 8c 7d 
 - No flush							 - No flush
 - The most of a kind is 4 of a kind (at index 0 / value K)	 - The most of a kind is 4 of a kind (at index 0 / value K)
 - No secondary pair						 - No secondary pair
 - evaluate_hand's ranking: FOUR_OF_A_KIND			 - evaluate_hand's ranking: FOUR_OF_A_KIND
 - 5 cards used for hand: Kc Kd Kh Ks 8c 			 - 5 cards used for hand: Kc Kd Kh Ks 8c 
Hand 2:								Hand 2:
--------							--------
Kc Kd Kh Ks 8c 6d 						Kc Kd Kh Ks 8c 6d 
 - No flush							 - No flush
 - The most of a kind is 4 of a kind (at index 0 / value K)	 - The most of a kind is 4 of a kind (at index 0 / value K)
 - No secondary pair						 - No secondary pair
 - evaluate_hand's ranking: FOUR_OF_A_KIND			 - evaluate_hand's ranking: FOUR_OF_A_KIND
 - 5 cards used for hand: Kc Kd Kh Ks 8c 			 - 5 cards used for hand: Kc Kd Kh Ks 8c 
Comparison : 							Comparison : 
--------------							--------------
Tie								Tie
============================					============================
Hand 1:								Hand 1:
--------							--------
Kc Kd Kh Ks 8c 7d 						Kc Kd Kh Ks 8c 7d 
 - No flush							 - No flush
 - The most of a kind is 4 of a kind (at index 0 / value K)	 - The most of a kind is 4 of a kind (at index 0 / value K)
 - No secondary pair						 - No secondary pair
 - evaluate_hand's ranking: FOUR_OF_A_KIND			 - evaluate_hand's ranking: FOUR_OF_A_KIND
 - 5 cards used for hand: Kc Kd Kh Ks 8c 			 - 5 cards used for hand: Kc Kd Kh Ks 8c 
Hand 2:								Hand 2:
--------							--------
Kc Kd Kh Ks 9d 8c 						Kc Kd Kh Ks 9d 8c 
 - No flush							 - No flush
 - The most of a kind is 4 of a kind (at index 0 / value K)	 - The most of a kind is 4 of a kind (at index 0 / value K)
 - No secondary pair						 - No secondary pair
 - evaluate_hand's ranking: FOUR_OF_A_KIND			 - evaluate_hand's ranking: FOUR_OF_A_KIND
 - 5 cards used for hand: Kc Kd Kh Ks 9d 			 - 5 cards used for hand: Kc Kd Kh Ks 9d 
Comparison : 							Comparison : 
--------------							--------------
Hand 2 wins!							Hand 2 wins!
============================					============================
Hand 1:								Hand 1:
--------							--------
Kc Kd Kh Ks 8c 7d 						Kc Kd Kh Ks 8c 7d 
 - No flush							 - No flush
 - The most of a kind is 4 of a kind (at index 0 / value K)	 - The most of a kind is 4 of a kind (at index 0 / value K)
 - No secondary pair						 - No secondary pair
 - evaluate_hand's ranking: FOUR_OF_A_KIND			 - evaluate_hand's ranking: FOUR_OF_A_KIND
 - 5 cards used for hand: Kc Kd Kh Ks 8c 			 - 5 cards used for hand: Kc Kd Kh Ks 8c 
Hand 2:								Hand 2:
--------							--------
As Kc Kd Kh Ks 4d 						As Kc Kd Kh Ks 4d 
 - No flush							 - No flush
 - The most of a kind is 4 of a kind (at index 1 / value K)	 - The most of a kind is 4 of a kind (at index 1 / value K)
 - No secondary pair						 - No secondary pair
 - evaluate_hand's ranking: FOUR_OF_A_KIND			 - evaluate_hand's ranking: FOUR_OF_A_KIND
 - 5 cards used for hand: Kc Kd Kh Ks As 			 - 5 cards used for hand: Kc Kd Kh Ks As 
Comparison : 							Comparison : 
--------------							--------------
Hand 2 wins!							Hand 2 wins!
============================					============================
Hand 1:								Hand 1:
--------							--------
Kc Kd Kh Ks 8c 7d 						Kc Kd Kh Ks 8c 7d 
 - No flush							 - No flush
 - The most of a kind is 4 of a kind (at index 0 / value K)	 - The most of a kind is 4 of a kind (at index 0 / value K)
 - No secondary pair						 - No secondary pair
 - evaluate_hand's ranking: FOUR_OF_A_KIND			 - evaluate_hand's ranking: FOUR_OF_A_KIND
 - 5 cards used for hand: Kc Kd Kh Ks 8c 			 - 5 cards used for hand: Kc Kd Kh Ks 8c 
Hand 2:								Hand 2:
--------							--------
Ac As Kc Kd Kh Ks 						Ac As Kc Kd Kh Ks 
 - No flush							 - No flush
 - The most of a kind is 4 of a kind (at index 2 / value K)	 - The most of a kind is 4 of a kind (at index 2 / value K)
 - Secondary pair at index 0 (value A)			      |	 - No secondary pair
 - evaluate_hand's ranking: FOUR_OF_A_KIND			 - evaluate_hand's ranking: FOUR_OF_A_KIND
 - 5 cards used for hand: Kc Kd Kh Ks Ac 			 - 5 cards used for hand: Kc Kd Kh Ks Ac 
Comparison : 							Comparison : 
--------------							--------------
Hand 2 wins!							Hand 2 wins!
============================					============================
Hand 1:								Hand 1:
--------							--------
Kc Kd Kh Ks 8c 7d 						Kc Kd Kh Ks 8c 7d 
 - No flush							 - No flush
 - The most of a kind is 4 of a kind (at index 0 / value K)	 - The most of a kind is 4 of a kind (at index 0 / value K)
 - No secondary pair						 - No secondary pair
 - evaluate_hand's ranking: FOUR_OF_A_KIND			 - evaluate_hand's ranking: FOUR_OF_A_KIND
 - 5 cards used for hand: Kc Kd Kh Ks 8c 			 - 5 cards used for hand: Kc Kd Kh Ks 8c 
Hand 2:								Hand 2:
--------							--------
Qc Qd Qh Qs 8c 6d 						Qc Qd Qh Qs 8c 6d 
 - No flush							 - No flush
 - The most of a kind is 4 of a kind (at index 0 / value Q)	 - The most of a kind is 4 of a kind (at index 0 / value Q)
 - No secondary pair						 - No secondary pair
 - evaluate_hand's ranking: FOUR_OF_A_KIND			 - evaluate_hand's ranking: FOUR_OF_A_KIND
 - 5 cards used for hand: Qc Qd Qh Qs 8c 			 - 5 cards used for hand: Qc Qd Qh Qs 8c 
Comparison : 							Comparison : 
--------------							--------------
Hand 1 wins!							Hand 1 wins!
============================					============================
Hand 1:								Hand 1:
--------							--------
Kc Kd Kh Ks 8c 7d 						Kc Kd Kh Ks 8c 7d 
 - No flush							 - No flush
 - The most of a kind is 4 of a kind (at index 0 / value K)	 - The most of a kind is 4 of a kind (at index 0 / value K)
 - No secondary pair						 - No secondary pair
 - evaluate_hand's ranking: FOUR_OF_A_KIND			 - evaluate_hand's ranking: FOUR_OF_A_KIND
 - 5 cards used for hand: Kc Kd Kh Ks 8c 			 - 5 cards used for hand: Kc Kd Kh Ks 8c 
Hand 2:								Hand 2:
--------							--------
Qc Qd Qh Qs 9c 6d 						Qc Qd Qh Qs 9c 6d 
 - No flush							 - No flush
 - The most of a kind is 4 of a kind (at index 0 / value Q)	 - The most of a kind is 4 of a kind (at index 0 / value Q)
 - No secondary pair						 - No secondary pair
 - evaluate_hand's ranking: FOUR_OF_A_KIND			 - evaluate_hand's ranking: FOUR_OF_A_KIND
 - 5 cards used for hand: Qc Qd Qh Qs 9c 			 - 5 cards used for hand: Qc Qd Qh Qs 9c 
Comparison : 							Comparison : 
--------------							--------------
Hand 1 wins!							Hand 1 wins!
============================					============================
Testcase 9: Trying hands with straight flushes
Valgrind returned an error status
==811== Memcheck, a memory error detector
==811== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==811== Using Valgrind-3.11.0 and LibVEX; rerun with -h for copyright info
==811== Command: ./test-eval inp.9.txt
==811== Parent PID: 810
==811== 
==811== Invalid read of size 8
==811==    at 0x4018AC: is_ace_low_straight_at (eval.c:149)
==811==    by 0x401954: is_straight_at (eval.c:168)
==811==    by 0x402629: describe_hand (test-eval.c:46)
==811==    by 0x402A06: main (test-eval.c:116)
==811==  Address 0x52056c8 is 0 bytes after a block of size 40 alloc'd
==811==    at 0x4C2FD5F: realloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==811==    by 0x401076: add_card_to (deck-c4.c:29)
==811==    by 0x403139: hand_from_string (input.c:49)
==811==    by 0x40298B: main (test-eval.c:110)
==811== 
==811== Invalid read of size 4
==811==    at 0x4018AF: is_ace_low_straight_at (eval.c:149)
==811==    by 0x401954: is_straight_at (eval.c:168)
==811==    by 0x402629: describe_hand (test-eval.c:46)
==811==    by 0x402A06: main (test-eval.c:116)
==811==  Address 0x0 is not stack'd, malloc'd or (recently) free'd
==811== 
==811== 
==811== Process terminating with default action of signal 11 (SIGSEGV): dumping core
==811==  Access not within mapped region at address 0x0
==811==    at 0x4018AF: is_ace_low_straight_at (eval.c:149)
==811==    by 0x401954: is_straight_at (eval.c:168)
==811==    by 0x402629: describe_hand (test-eval.c:46)
==811==    by 0x402A06: main (test-eval.c:116)
==811==  If you believe this happened as a result of a stack
==811==  overflow in your program's main thread (unlikely but
==811==  possible), you can try to increase the size of the
==811==  main thread stack using the --main-stacksize= flag.
==811==  The main thread stack size used in this run was 8388608.
==811== 
==811== HEAP SUMMARY:
==811==     in use at exit: 864 bytes in 16 blocks
==811==   total heap usage: 26 allocs, 10 frees, 9,216 bytes allocated
==811== 
==811== LEAK SUMMARY:
==811==    definitely lost: 0 bytes in 0 blocks
==811==    indirectly lost: 0 bytes in 0 blocks
==811==      possibly lost: 0 bytes in 0 blocks
==811==    still reachable: 864 bytes in 16 blocks
==811==         suppressed: 0 bytes in 0 blocks
==811== Rerun with --leak-check=full to see details of leaked memory
==811== 
==811== For counts of detected and suppressed errors, rerun with: -v
==811== ERROR SUMMARY: 2 errors from 2 contexts (suppressed: 0 from 0)
Testcase 10: Trying each type of hand ranking
Valgrind returned an error status
==816== Memcheck, a memory error detector
==816== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==816== Using Valgrind-3.11.0 and LibVEX; rerun with -h for copyright info
==816== Command: ./test-eval inp.10.txt
==816== Parent PID: 815
==816== 
==816== Invalid read of size 8
==816==    at 0x4014C7: card_ptr_comp (eval.c:10)
==816==    by 0x4E73231: msort_with_tmp.part.0 (msort.c:83)
==816==    by 0x4E72EDC: msort_with_tmp (msort.c:45)
==816==    by 0x4E72EDC: msort_with_tmp.part.0 (msort.c:54)
==816==    by 0x4E72EDC: msort_with_tmp (msort.c:45)
==816==    by 0x4E72EDC: msort_with_tmp.part.0 (msort.c:54)
==816==    by 0x4E7369E: msort_with_tmp (msort.c:45)
==816==    by 0x4E7369E: qsort_r (msort.c:297)
==816==    by 0x401B03: compare_hands (eval.c:207)
==816==    by 0x402A7B: main (test-eval.c:124)
==816==  Address 0x5208700 is 0 bytes after a block of size 48 alloc'd
==816==    at 0x4C2FD5F: realloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==816==    by 0x401076: add_card_to (deck-c4.c:29)
==816==    by 0x403139: hand_from_string (input.c:49)
==816==    by 0x402A4F: main (test-eval.c:122)
==816== 
==816== Invalid read of size 4
==816==    at 0x4014CA: card_ptr_comp (eval.c:10)
==816==    by 0x4E73231: msort_with_tmp.part.0 (msort.c:83)
==816==    by 0x4E72EDC: msort_with_tmp (msort.c:45)
==816==    by 0x4E72EDC: msort_with_tmp.part.0 (msort.c:54)
==816==    by 0x4E72EDC: msort_with_tmp (msort.c:45)
==816==    by 0x4E72EDC: msort_with_tmp.part.0 (msort.c:54)
==816==    by 0x4E7369E: msort_with_tmp (msort.c:45)
==816==    by 0x4E7369E: qsort_r (msort.c:297)
==816==    by 0x401B03: compare_hands (eval.c:207)
==816==    by 0x402A7B: main (test-eval.c:124)
==816==  Address 0x0 is not stack'd, malloc'd or (recently) free'd
==816== 
==816== 
==816== Process terminating with default action of signal 11 (SIGSEGV): dumping core
==816==  Access not within mapped region at address 0x0
==816==    at 0x4014CA: card_ptr_comp (eval.c:10)
==816==    by 0x4E73231: msort_with_tmp.part.0 (msort.c:83)
==816==    by 0x4E72EDC: msort_with_tmp (msort.c:45)
==816==    by 0x4E72EDC: msort_with_tmp.part.0 (msort.c:54)
==816==    by 0x4E72EDC: msort_with_tmp (msort.c:45)
==816==    by 0x4E72EDC: msort_with_tmp.part.0 (msort.c:54)
==816==    by 0x4E7369E: msort_with_tmp (msort.c:45)
==816==    by 0x4E7369E: qsort_r (msort.c:297)
==816==    by 0x401B03: compare_hands (eval.c:207)
==816==    by 0x402A7B: main (test-eval.c:124)
==816==  If you believe this happened as a result of a stack
==816==  overflow in your program's main thread (unlikely but
==816==  possible), you can try to increase the size of the
==816==  main thread stack using the --main-stacksize= flag.
==816==  The main thread stack size used in this run was 8388608.
==816== 
==816== HEAP SUMMARY:
==816==     in use at exit: 912 bytes in 19 blocks
==816==   total heap usage: 122 allocs, 103 frees, 11,096 bytes allocated
==816== 
==816== LEAK SUMMARY:
==816==    definitely lost: 0 bytes in 0 blocks
==816==    indirectly lost: 0 bytes in 0 blocks
==816==      possibly lost: 0 bytes in 0 blocks
==816==    still reachable: 912 bytes in 19 blocks
==816==         suppressed: 0 bytes in 0 blocks
==816== Rerun with --leak-check=full to see details of leaked memory
==816== 
==816== For counts of detected and suppressed errors, rerun with: -v
==816== ERROR SUMMARY: 2 errors from 2 contexts (suppressed: 0 from 0)

Overall Grade: F
